name: Create Electron Installations
on:
  push:
    tags:
      - v*

jobs:
  windows:
    name: Create the Windows Installation
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'
      - name: Setup Node
        uses: actions/setup-node@v2-beta

      - name: Set backend environment
        run: |
          cd $env:GITHUB_WORKSPACE/backend
          pip install --upgrade pip
          pip install t2wml-api
          pip install -r requirements.txt
          pip install pyinstaller pywin32 semver
      - name: Create installer
        env:  # Replace unicode characters with ?
          PYTHONIOENCODING: :replace
          PYTHONLEGACYWINDOWSIOENCODING: true
          CI: false   # Otherwise React stops on warnings
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
        run: |
          $env.CSC_LINK=""
          cd $env:GITHUB_WORKSPACE/backend
          python packaging/prepare_installation.py --version ${{ github.ref }}
      - name: Rename installer to canonical name
        run: |
          cd $env:GITHUB_WORKSPACE/electron/out
          copy "t2wml Setup*.exe" t2wml-setup.exe
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
        shell: bash
      - name: Upload to Release
        id: upload-release-asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: electron/out/t2wml-setup.exe
          asset_name: t2wml-setup-${{ steps.get_version.outputs.VERSION }}.exe
          tag: ${{ github.ref }}
          overwrite: true
          body: "Windows Executable"
  mac:
    name: Create the Mac OS Installation
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'
      - name: Setup Node
        uses: actions/setup-node@v2-beta
      - name: Set backend environment
        run: |
          cd $GITHUB_WORKSPACE/backend
          pip install --upgrade setuptools pip
          pip install t2wml-api
          pip install -r requirements.txt
          pip install pyinstaller semver
      - name: Create executable
        env:
          CI: false   # Otherwise React stops on warnings
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
        run: |
          cd $GITHUB_WORKSPACE/backend
          python packaging/prepare_installation.py --version ${{ github.ref }}
      - name: Rename installer to canonical name
        run: |
          cd $GITHUB_WORKSPACE/electron/out
          ls -l
          cp t2wml*.pkg t2wml.pkg

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Upload to Release
        id: upload-release-asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: electron/out/t2wml.pkg
          asset_name: t2wml-${{ steps.get_version.outputs.VERSION }}.pkg
          tag: ${{ github.ref }}
          overwrite: true
          body: "MacOS Executable"
  linux:
    name: Create the Linux Installation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'
      - name: Setup Node
        uses: actions/setup-node@v2-beta

      - name: Set backend environment
        run: |
          cd $GITHUB_WORKSPACE/backend
          pip install --upgrade setuptools pip
          pip install t2wml-api
          pip install -r requirements.txt
          pip install pyinstaller semver
      - name: Create executable
        env:
          CI: false   # Otherwise React stops on warnings
        run: |
          cd $GITHUB_WORKSPACE/backend
          python packaging/prepare_installation.py --version ${{ github.ref }}
      - name: Rename installer to canonical name
        run: |
          cd $GITHUB_WORKSPACE/electron/out
          cp t2wml*.AppImage t2wml.AppImage
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Upload to Release
        id: upload-release-asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: electron/out/t2wml.AppImage
          asset_name: t2wml-${{ steps.get_version.outputs.VERSION }}.AppImage
          tag: ${{ github.ref }}
          overwrite: true
          body: "Linux Executable"

